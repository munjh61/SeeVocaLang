spring:
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ENC(7xnldnt3C2V35eey9i50WkHVWLaLdGvoLUg0idBRCfsanl9kMEIK+RtRdpdjBg59)
            client-secret: ENC(Et6aon3BnU++zVMogZBbV7b8N7cNI4Qg8cnEKJt0Afb9wCXQhHUrUYLdVKw+RxX9)
            client-authentication-method: client_secret_post
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            client-name: kakao
            scope:
              - profile_nickname
          naver:
            client-id: ENC(DDHJl1RdijqlnDP6VBWByalCam3DogyMW4pr+WSRgtw=)
            client-secret: ENC(69rpCKqMj81D2kAsqUdUPahcE1AQng/j)
            client-authentication-method: client_secret_post
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            client-name: naver
            scope:
              - nickname
          google:
            client-id: ENC(jvWjtmDQNZPBwVjTKc8oyeZobNP0sPjms1tvT5FIVBV9FJZVCl24KPF1Z+5oYpcjcf/X+UnCTwISPv79jPurZx/8dT5ORMslCP8uvdWtnpOzoEl2JRHKqg==)
            client-secret: ENC(HgEDndjdx02Voz7VohkN6bln/iGWbfpHsoRSE98MKS2PLm4tIp9VvFjnPJ0nQF5L)
            client-authentication-method: client_secret_post
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            authorization-grant-type: authorization_code
            client-name: google
            scope:
              - openid
              - profile

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ENC(hptFpQ3djxAH6TW/uqBcnuZcjAqanCtNs6Y+awJibjyhDi4Cp1NobA==)
    username: ENC(7gqOcyrwBEPvO4NSETiCFw==)
    password: ENC(zv4JIq6FbWXUysXuaIwO3pIjU+xig1gi)

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        show_sql: true
        format_sql: true

  data:
    redis:
      host: localhost
      port: 6379
      password: ""

  cloud:
    aws:
      region:
        static: ENC(BtfL0sVwdELMPhALyb0MTIe46MJbeKIW)
      credentials:
        access-key: ENC(hCxkFZn+/uKzGBJN8mbssw4ZdWlxwEh6RcGEgRPx/eg=)
        secret-key: ENC(XN2PxgNxu/xBd+R+M0TIk9ILh0K5aDcSQIXswnzlt66sjSPe2j4u1+t0eVzYiBrXdZkQgks98ns=)
      s3:
        bucket-name: ENC(UOSrTPaHVuHvR9uCBSTCnZ0AqGz9wwtM)

jwt:
  secret: ${JWT_SECRET:see-vocabulary-language-ssafy-project-a303}
  access-minutes: 15m
  refresh-days: 14d

logging:
  level:
    org.springframework.security.oauth2: DEBUG
    org.springframework.security: DEBUG
    com.ssafy.a303.backend: DEBUG

  servlet:
    multipart:
      max-file-size: 15MB
      max-request-size: 15MB

server:
  tomcat:
    max-http-form-post-size: 15MB

  ai:
    url: ENC(0FnCnLQ3VVYBWJWsF5Q3MM87EuqNtAe0D8mO0N1Dl9qtnhvx1NOeXg==)
